{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","selectedGoods","addHandler","good","setState","removeHandler","filter","item","clearHandler","getGoodsList","length","tail","pop","join","this","className","type","onClick","map","isSelectedGood","includes","cn","selected","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQWC,EAAb,4MACEC,MAAe,CACbC,MAAOH,EACPI,cAAe,IAHnB,EAMEC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAAAL,GAAK,MAAK,CAAEE,cAAc,GAAD,mBAAMF,EAAME,eAAZ,CAA2BE,SAPtE,EAUEE,cAAgB,SAACF,GACf,EAAKC,UAAS,SAAAL,GAAK,MAAK,CAAEE,cAAeF,EAAME,cAAcK,QAAO,SAAAC,GAAI,OAAIA,IAASJ,UAXzF,EAcEK,aAAe,WACb,EAAKJ,SAAS,CAAEH,cAAe,MAfnC,EAkBEQ,aAAe,WACb,IAAMR,EAAa,YAAO,EAAKF,MAAME,eAErC,OAAQA,EAAcS,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUT,EAAc,GAAxB,gBAEF,QAEE,IAAMU,EAAOV,EAAcW,MAE3B,MAAM,GAAN,OAAUX,EAAcY,KAAK,MAA7B,gBAA0CF,EAA1C,kBAhCR,4CAqCE,WAAU,IAAD,OACP,EAAiCG,KAAKf,MAA9BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,cAEf,OACE,sBAAKc,UAAU,MAAf,UACE,+BAC4B,IAAzBd,EAAcS,OAEX,wBAAQM,KAAK,SAASC,QAASH,KAAKN,aAApC,eAEA,GACHM,KAAKL,kBAER,6BACGT,EAAMkB,KAAI,SAAAf,GACT,IAAMgB,EAAiBlB,EAAcmB,SAASjB,GAE9C,OACE,qBAEEY,UAAWM,IAAG,aAAc,CAAEC,SAAUH,IAF1C,UAIGhB,EACAgB,EAEG,wBAAQH,KAAK,SAASC,QAAS,kBAAM,EAAKZ,cAAcF,IAAxD,oBAGA,wBAAQa,KAAK,SAASC,QAAS,kBAAM,EAAKf,WAAWC,IAArD,mBATCA,eAxDrB,GAAyBoB,IAAMC,WCpB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6733d539.chunk.js","sourcesContent":["import React from 'react';\n\nimport cn from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  selectedGoods: string[],\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    goods: goodsFromServer,\n    selectedGoods: [],\n  };\n\n  addHandler = (good: string) => {\n    this.setState(state => ({ selectedGoods: [...state.selectedGoods, good] }));\n  };\n\n  removeHandler = (good: string) => {\n    this.setState(state => ({ selectedGoods: state.selectedGoods.filter(item => item !== good) }));\n  };\n\n  clearHandler = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  getGoodsList = () => {\n    const selectedGoods = [...this.state.selectedGoods];\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n\n      default:\n      {\n        const tail = selectedGoods.pop();\n\n        return `${selectedGoods.join(', ')} and ${tail} is selected`;\n      }\n    }\n  };\n\n  render() {\n    const { goods, selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {selectedGoods.length !== 0\n            ? (\n              <button type=\"button\" onClick={this.clearHandler}>X</button>\n            )\n            : ''}\n          {this.getGoodsList()}\n        </h1>\n        <ul>\n          {goods.map(good => {\n            const isSelectedGood = selectedGoods.includes(good);\n\n            return (\n              <li\n                key={good}\n                className={cn('list__item', { selected: isSelectedGood })}\n              >\n                {good}\n                {isSelectedGood\n                  ? (\n                    <button type=\"button\" onClick={() => this.removeHandler(good)}>Remove</button>\n                  )\n                  : (\n                    <button type=\"button\" onClick={() => this.addHandler(good)}>Add</button>\n                  )}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}