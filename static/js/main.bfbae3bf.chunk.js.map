{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","goods","selectedGoods","addHandler","good","setState","prevState","removeHandler","filter","item","clearHandler","getGoodsList","length","tail","pop","join","this","className","type","onClick","map","cn","selected","some","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAKMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQIC,E,4MACJC,MAAQ,CACNC,MAAOH,EACPI,cAAe,I,EAGjBC,WAAa,SAACC,GACZ,EAAKC,UAAS,SAACC,GACb,MAAO,CACLJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,S,EAKlDG,cAAgB,SAACH,GACf,EAAKC,UAAS,SAACC,GACb,MAAO,CACLJ,cAAeI,EAAUJ,cAAcM,QAAO,SAAAC,GAAI,OAAIA,IAASL,U,EAKrEM,aAAe,WACb,EAAKL,SAAS,CAAEH,cAAe,M,EAGjCS,aAAe,WACb,IAAMT,EAAa,YAAO,EAAKF,MAAME,eAErC,OAAQA,EAAcU,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUV,EAAc,GAAxB,gBAEF,QAEE,IAAMW,EAAOX,EAAcY,MAE3B,MAAM,GAAN,OAAUZ,EAAca,KAAK,MAA7B,gBAA0CF,EAA1C,kB,4CAKN,WAAU,IAAD,OACP,EAAiCG,KAAKhB,MAA9BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,cAEf,OACE,sBAAKe,UAAU,MAAf,UACE,+BAC4B,IAAzBf,EAAcU,OAEX,wBAAQM,KAAK,SAASC,QAASH,KAAKN,aAApC,eAEA,GACHM,KAAKL,kBAEPV,EAAMmB,KAAI,SAAAhB,GAAI,OACb,qBAEEa,UAAWI,IAAG,aAAc,CAAEC,SAAUpB,EAAcqB,MAAK,SAAAd,GAAI,OAAIA,IAASL,OAF9E,UAIGA,EACAF,EAAcqB,MAAK,SAAAd,GAAI,OAAIA,IAASL,KAEjC,wBAAQc,KAAK,SAASC,QAAS,kBAAM,EAAKZ,cAAcH,IAAxD,oBAGA,wBAAQc,KAAK,SAASC,QAAS,kBAAM,EAAKhB,WAAWC,IAArD,mBATCA,a,GA5DCoB,IAAMC,WA8ET1B,IClGf2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bfbae3bf.chunk.js","sourcesContent":["import React from 'react';\n\nimport cn from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  goods: string[],\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    goods: goodsFromServer,\n    selectedGoods: [],\n  };\n\n  addHandler = (good: string) => {\n    this.setState((prevState) => {\n      return {\n        selectedGoods: [...prevState.selectedGoods, good],\n      };\n    });\n  };\n\n  removeHandler = (good: string) => {\n    this.setState((prevState) => {\n      return {\n        selectedGoods: prevState.selectedGoods.filter(item => item !== good),\n      };\n    });\n  };\n\n  clearHandler = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  getGoodsList = () => {\n    const selectedGoods = [...this.state.selectedGoods];\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n\n      default:\n      {\n        const tail = selectedGoods.pop();\n\n        return `${selectedGoods.join(', ')} and ${tail} is selected`;\n      }\n    }\n  };\n\n  render() {\n    const { goods, selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          {selectedGoods.length !== 0\n            ? (\n              <button type=\"button\" onClick={this.clearHandler}>X</button>\n            )\n            : ''}\n          {this.getGoodsList()}\n        </h1>\n        {goods.map(good => (\n          <li\n            key={good}\n            className={cn('list__item', { selected: selectedGoods.some(item => item === good) })}\n          >\n            {good}\n            {selectedGoods.some(item => item === good)\n              ? (\n                <button type=\"button\" onClick={() => this.removeHandler(good)}>Remove</button>\n              )\n              : (\n                <button type=\"button\" onClick={() => this.addHandler(good)}>Add</button>\n              )}\n          </li>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}